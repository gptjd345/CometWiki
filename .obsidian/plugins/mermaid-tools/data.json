{
  "categories": {
    "Flowchart": "Flowchart",
    "SequenceDiagram": "SequenceDiagram",
    "ClassDiagram": "ClassDiagram",
    "StateDiagram": "StateDiagram",
    "EntityRelationshipDiagram": "EntityRelationshipDiagram",
    "UserJourneyDiagram": "UserJourneyDiagram",
    "GanttChart": "GanttChart",
    "PieChart": "PieChart",
    "RequirementDiagram": "RequirementDiagram",
    "GitGraph": "GitGraph",
    "Mindmap": "Mindmap",
    "Timeline": "Timeline",
    "C4Diagram": "C4Diagram",
    "QuadrantChart": "QuadrantChart"
  },
  "elements": [
    {
      "id": "555b22a0-59bd-4f76-b5b0-48c380fb8d35",
      "category": "Flowchart",
      "description": "a simple flowchart with top to down direction",
      "content": "flowchart TD\nStart --> Stop",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "46b50803-35c0-4427-a400-8502d3153746",
      "category": "Flowchart",
      "description": "a simple flowchart with left to right direction",
      "content": "flowchart LR\nStart --> Stop",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "ab1b9adb-8461-4617-999d-653a1d03ba86",
      "category": "Flowchart",
      "description": "A node with round edges",
      "content": "id1(Some text)",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "4fbaf5e2-f045-4628-9c95-25986072386c",
      "category": "Flowchart",
      "description": "A stadium-shaped node",
      "content": "id1([Some text])",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "4fd8f4f8-9919-48d9-8cd2-1b446d686363",
      "category": "Flowchart",
      "description": "A node in a cylindrical shape",
      "content": "id1[(Database)]",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "8cf361aa-bcda-4836-a34e-dfc18a77f9fb",
      "category": "Flowchart",
      "description": "A node in the form of a circle",
      "content": "id1((Some text))",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "c05a3fc9-1848-4b92-94c2-30f4255c7194",
      "category": "Flowchart",
      "description": "A node (rhombus)",
      "content": "id1{Some text}",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "2a222ad5-fe72-4eeb-9c26-c4791827520d",
      "category": "Flowchart",
      "description": "A link with arrow head",
      "content": "A-->B",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "d42266d4-e934-46a4-a5ab-127af3057168",
      "category": "Flowchart",
      "description": "An open link",
      "content": "A --- B",
      "sortingOrder": 9,
      "isPinned": false
    },
    {
      "id": "86295111-df5c-4b2f-b9f5-cddee261a885",
      "category": "Flowchart",
      "description": "Text on links",
      "content": "A-- This is the text! ---B",
      "sortingOrder": 10,
      "isPinned": false
    },
    {
      "id": "9bf1acd8-7ecb-456c-b08e-86d624f64c11",
      "category": "Flowchart",
      "description": "A link with arrow head and text",
      "content": "A-->|text|B",
      "sortingOrder": 11,
      "isPinned": false
    },
    {
      "id": "1dbb1b6f-5141-4aa3-9434-2eb2baab62e8",
      "category": "Flowchart",
      "description": "Dotted link",
      "content": "A-.->B",
      "sortingOrder": 12,
      "isPinned": false
    },
    {
      "id": "cc67b8c1-7013-4eeb-970b-8b25ebefb478",
      "category": "Flowchart",
      "description": "Thick link",
      "content": "A ==> B",
      "sortingOrder": 13,
      "isPinned": false
    },
    {
      "id": "22b5bc61-663f-401f-ad9a-d4f30ef53d4c",
      "category": "Flowchart",
      "description": "Subgraph",
      "content": "subgraph one\na1-->a2\nend",
      "sortingOrder": 14,
      "isPinned": false
    },
    {
      "id": "aa917653-f6aa-4b63-9c91-f8a4a5578eb5",
      "category": "SequenceDiagram",
      "description": "a simple sequence diagram",
      "content": "sequenceDiagram\nAlice->>John: Hello John, how are you?\nJohn-->>Alice: Great!\nAlice-)John: See you later!",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "66c0c9ee-2dba-4bfa-844b-863a4a5cde25",
      "category": "SequenceDiagram",
      "description": "a simple sequence diagram with actors",
      "content": "sequenceDiagram\nactor Alice\nactor John\nAlice->>John: Hello John, how are you?\nJohn-->>Alice: Great!\nAlice-)John: See you later!",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "0fc2d0d1-da33-468d-8c46-1dd03652c98f",
      "category": "StateDiagram",
      "description": "a sample state diagram",
      "content": "stateDiagram-v2\n        [*] --> Still\n        Still --> [*]\n    \n        Still --> Moving\n        Moving --> Still\n        Moving --> Crash\n        Crash --> [*]",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "df16dfbb-c76a-4273-978c-b32f3540f7d8",
      "category": "StateDiagram",
      "description": "a sample state diagram with left-to-right direction",
      "content": "stateDiagram-v2\n        direction LR\n        [*] --> Still\n        Still --> [*]\n    \n        Still --> Moving\n        Moving --> Still\n        Moving --> Crash\n        Crash --> [*]",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "fcfcd7e2-cef5-4e44-93bd-c1e1e06f7013",
      "category": "StateDiagram",
      "description": "node with description",
      "content": "s2 : This is a state description",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "32997eb7-6131-4fe5-b27e-60a48c006af2",
      "category": "StateDiagram",
      "description": "a transition",
      "content": "s1 --> s2",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "6ed935a0-8f01-428d-bf67-0958ea2be175",
      "category": "StateDiagram",
      "description": "a transition with label",
      "content": "s1 --> s2: A transition",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "a062445a-d887-42f9-b148-9a80e27eae92",
      "category": "StateDiagram",
      "description": "composite state",
      "content": "\n        [*] --> First\n        state First {\n            [*] --> second\n            second --> [*]\n        }",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "ade27571-8e81-4f82-a51f-826cb7eb0768",
      "category": "StateDiagram",
      "description": "diagram with choice",
      "content": "stateDiagram-v2\n        state if_state <<choice>>\n        [*] --> IsPositive\n        IsPositive --> if_state\n        if_state --> False: if n < 0\n        if_state --> True : if n >= 0",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "4b0a56d0-615c-4085-96c2-e2a1f1156485",
      "category": "StateDiagram",
      "description": "diagram with fork",
      "content": "stateDiagram-v2\n        state fork_state <<fork>>\n          [*] --> fork_state\n          fork_state --> State2\n          fork_state --> State3\n    \n          state join_state <<join>>\n          State2 --> join_state\n          State3 --> join_state\n          join_state --> State4\n          State4 --> [*]",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "9c3fb94d-8b5c-4dab-824d-3912bd8d6944",
      "category": "StateDiagram",
      "description": "a diagram with concurrency",
      "content": "stateDiagram-v2\n        [*] --> Active\n    \n        state Active {\n            [*] --> NumLockOff\n            NumLockOff --> NumLockOn : EvNumLockPressed\n            NumLockOn --> NumLockOff : EvNumLockPressed\n            --\n            [*] --> CapsLockOff\n            CapsLockOff --> CapsLockOn : EvCapsLockPressed\n            CapsLockOn --> CapsLockOff : EvCapsLockPressed\n            --\n            [*] --> ScrollLockOff\n            ScrollLockOff --> ScrollLockOn : EvScrollLockPressed\n            ScrollLockOn --> ScrollLockOff : EvScrollLockPressed\n        }",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "bd043843-de56-4537-87ec-f3720114a7d0",
      "category": "EntityRelationshipDiagram",
      "description": "a sample entity relationship diagram",
      "content": "erDiagram\n        CUSTOMER ||--o{ ORDER : places\n        ORDER ||--|{ LINE-ITEM : contains\n        CUSTOMER }|..|{ DELIVERY-ADDRESS : uses",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "0ca0f1ef-9a1f-4810-b45a-8ad2fa2e2c8d",
      "category": "EntityRelationshipDiagram",
      "description": "an entity",
      "content": "    CUSTOMER {\n            string name\n            string custNumber\n            string sector\n        }",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "16f125d5-7861-463e-985a-31f8fa88de50",
      "category": "EntityRelationshipDiagram",
      "description": "one-to-many relationship",
      "content": "A ||--|{ B : label",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "b833c800-2c4e-4c2d-94cb-b98680d86b4f",
      "category": "EntityRelationshipDiagram",
      "description": "many-to-many relationship",
      "content": "A }|--|{ B : label",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "b64af67c-aaa1-49eb-a19c-278203e50215",
      "category": "EntityRelationshipDiagram",
      "description": "one-to-one relationship",
      "content": "A ||--|| B : label",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "dcec3304-4ded-47fa-8ae9-ccfec3b49fa9",
      "category": "EntityRelationshipDiagram",
      "description": "many-to-one relationship",
      "content": "A }|--|| B : label",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "b8fe9d8e-cf8a-46d7-b418-9a36f9a60d65",
      "category": "EntityRelationshipDiagram",
      "description": "zero/one-to-one relationship",
      "content": "A |o--|| B : label",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "e8b86e46-bda7-4875-afb7-89d5428a71b4",
      "category": "EntityRelationshipDiagram",
      "description": "one-to-one/zero relationship",
      "content": "A ||--o| B : label",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "f4f65abd-f378-42bb-a2d2-ae293ce775b4",
      "category": "EntityRelationshipDiagram",
      "description": "zero-or-more-to-one relationship",
      "content": "A }o--|| B : label",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "c66dd01d-e0ed-4390-b3e3-5389fd14b4ef",
      "category": "EntityRelationshipDiagram",
      "description": "one-to-zero-or-more relationship",
      "content": "A ||--o{ B : label",
      "sortingOrder": 9,
      "isPinned": false
    },
    {
      "id": "53a94aad-7202-4438-8385-2d438be38fb0",
      "category": "EntityRelationshipDiagram",
      "description": "zero-or-more-to-many relationship",
      "content": "A }o--|{ B : label",
      "sortingOrder": 10,
      "isPinned": false
    },
    {
      "id": "0b13e239-5295-4fe4-9d36-1a21e117442b",
      "category": "EntityRelationshipDiagram",
      "description": "many-to-zero-or-more relationship",
      "content": "A }|--o{ B : label",
      "sortingOrder": 11,
      "isPinned": false
    },
    {
      "id": "33cb07ad-3290-45ed-aec9-6ccf56fca015",
      "category": "UserJourneyDiagram",
      "description": "a sample user journey diagram",
      "content": "journey\n        title My working day\n        section Go to work\n          Make tea: 5: Me\n          Go upstairs: 3: Me\n          Do work: 1: Me, Cat\n        section Go home\n          Go downstairs: 5: Me\n          Sit down: 5: Me",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "c44d477f-510e-430b-b855-bf7b3deeb347",
      "category": "UserJourneyDiagram",
      "description": "a step in user journey",
      "content": "      Step Title: 5: ActorName",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "71ed7ee0-552e-41c8-b120-f8ddaf17efeb",
      "category": "GanttChart",
      "description": "simple gantt chart",
      "content": "gantt\n        title A Gantt Diagram\n        dateFormat  YYYY-MM-DD\n        section Section\n        A task           :a1, 2014-01-01, 30d\n        Another task     :after a1  , 20d\n        section Another\n        Task in sec      :2014-01-12  , 12d\n        another task      : 24d",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "cf03b699-55a0-4ab8-9905-232b38e3121a",
      "category": "GanttChart",
      "description": "rich gantt chart",
      "content": "gantt\n        dateFormat  YYYY-MM-DD\n        title       Adding GANTT diagram functionality to mermaid\n        excludes    weekends\n    \n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2              :         des4, after des3, 5d\n    \n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d\n        Functionality added                 :milestone, 2014-01-25, 0d\n    \n        section Documentation\n        Describe gantt syntax               :active, a1, after des1, 3d\n        Add gantt diagram to demo page      :after a1  , 20h\n        Add another diagram to demo page    :doc1, after a1  , 48h\n    \n        section Last section\n        Describe gantt syntax               :after doc1, 3d\n        Add gantt diagram to demo page      :20h\n        Add another diagram to demo page    :48h",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "f0188a89-3d40-408d-8bc0-f1eee11bddc0",
      "category": "GanttChart",
      "description": "milestones example",
      "content": "gantt\n        dateFormat HH:mm\n        axisFormat %H:%M\n        Initial milestone : milestone, m1, 17:49,2min\n        taska2 : 10min\n        taska3 : 5min\n        Final milestone : milestone, m2, 18:14, 2min",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "3b14fe29-41dd-40f0-871f-e56607af6f55",
      "category": "PieChart",
      "description": "sample pie chart",
      "content": "pie title /r/obsidianmd posts by type\n        \"Look at my awesome graph\" : 85\n        \"Look at my cool dashboard\" : 14\n        \"Moved from Notion, liking it\" : 1",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "d9fb91c6-e58d-49c3-b5f5-eb5ef6359518",
      "category": "PieChart",
      "description": "sample pie chart with values shown in legend",
      "content": "pie showdata\n        title /r/obsidianmd posts by type\n        \"Graphs\" : 85\n        \"Dashboards\" : 14\n        \"Tips\" : 1",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "47154663-c775-4f60-b55a-a50a1b6534eb",
      "category": "RequirementDiagram",
      "description": "sample requirements diagram",
      "content": "    requirementDiagram\n\n        requirement test_req {\n        id: 1\n        text: the test text.\n        risk: high\n        verifymethod: test\n        }\n    \n        element test_entity {\n        type: simulation\n        }\n    \n        test_entity - satisfies -> test_req",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "5c779781-f11f-4409-b7fb-28a811d1def3",
      "category": "RequirementDiagram",
      "description": "sample requirements diagram",
      "content": "element customElement {\n            type: customType\n            docref: customDocRef\n        }",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "96924dd9-f2c4-485a-b42f-e8a4254b8fd9",
      "category": "RequirementDiagram",
      "description": "a requirement with high risk",
      "content": "functionalRequirement myReq {\n            id: reqId\n            text: someText\n            risk: High\n            verifymethod: analysis\n        }",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "400923f9-8788-4ad2-8262-ad59b9b72de8",
      "category": "RequirementDiagram",
      "description": "sample requirements diagram",
      "content": "interfaceRequirement myReq2 {\n            id: reqId\n            text: someText\n            risk: Medium\n            verifymethod: demonstration\n        }",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "10767f4c-ce8d-4e16-88f9-4d4b505306d7",
      "category": "RequirementDiagram",
      "description": "sample requirements diagram",
      "content": "designConstraint myReq3 {\n            id: reqId\n            text: someText\n            risk: Low\n            verifymethod: test\n        }",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "0ab40234-97e7-485a-8d4e-a209a238f805",
      "category": "GitGraph",
      "description": "simple git graph",
      "content": "gitGraph\n        commit\n        commit\n        branch develop\n        checkout develop\n        commit\n        commit\n        checkout main\n        merge develop\n        commit\n        commit",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "1e749df4-0854-4aa3-9080-b5073031e5cf",
      "category": "GitGraph",
      "description": "tagged commit",
      "content": "commit id: \"Normal\" tag: \"v1.0.0\"",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "c265036e-2290-4b98-ba0f-99258542a604",
      "category": "GitGraph",
      "description": "reverse commit",
      "content": "commit id: \"Reverse\" type: REVERSE",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "817bea2d-b985-4fca-8e3c-2fe6116883f5",
      "category": "GitGraph",
      "description": "highlighted commit",
      "content": "commit id: \"Highlight\" type: HIGHLIGHT",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "a015ab14-4f10-4097-a9a3-b4f00980b10a",
      "category": "GitGraph",
      "description": "reverse commit",
      "content": "commit id: \"Reverse\" type: REVERSE",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "139dc7bf-cfb3-4626-bb59-b1eed38488e0",
      "category": "GitGraph",
      "description": "git graph with cherry-pick",
      "content": "gitGraph\n        commit id: \"ZERO\"\n        branch develop\n        commit id:\"A\"\n        checkout main\n        commit id:\"ONE\"\n        checkout develop\n        commit id:\"B\"\n        checkout main\n        commit id:\"TWO\"\n        cherry-pick id:\"A\"\n        commit id:\"THREE\"\n        checkout develop\n        commit id:\"C\"",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "b25f7d25-189b-4133-9bb0-618c187f3cd3",
      "category": "Mindmap",
      "description": "a simple mindmap",
      "content": "mindmap\n        Root\n            A\n              B\n              C",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "5dc647ae-dac9-4685-a603-5565d6e655a4",
      "category": "Mindmap",
      "description": "square",
      "content": "id[I am a square]",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "423fdabd-4d24-4765-af8e-f335e5c2ae13",
      "category": "Mindmap",
      "description": "rounded square",
      "content": "id(I am a rounded square)",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "36defd26-98b8-4207-bf61-af1df0c4560e",
      "category": "Mindmap",
      "description": "circle",
      "content": "id((I am a circle))",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "df523eef-721d-4dd4-bf3c-b7242848b93d",
      "category": "Mindmap",
      "description": "bang",
      "content": "id))I am a bang((",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "88e483a9-12dc-46e1-84f6-674b3e84256e",
      "category": "Mindmap",
      "description": "cloud",
      "content": "id)I am a cloud(",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "c4f677a6-afc1-467e-ad65-badce664e262",
      "category": "Mindmap",
      "description": "hexagon",
      "content": "id{{I am a hexagon}}",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "46ebc003-b93f-4830-bb95-5dc0cc676698",
      "category": "Mindmap",
      "description": "default",
      "content": "I am the default shape",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "80f9207f-8ad3-4d69-b7cb-12b88bfa240e",
      "category": "Mindmap",
      "description": "sample mindmap",
      "content": "mindmap\n        root((mindmap))\n          Origins\n            Long history\n            Popularisation\n              British popular psychology author Tony Buzan\n          Research\n            On effectiveness<br/>and features\n            On Automatic creation\n              Uses\n                  Creative techniques\n                  Strategic planning\n                  Argument mapping\n          Tools\n            Pen and paper\n            Mermaid",
      "sortingOrder": 9,
      "isPinned": false
    },
    {
      "id": "b6723a81-5758-4890-8164-8ffa4a585abe",
      "category": "Timeline",
      "description": "sample timeline",
      "content": "timeline\n\t\ttitle History of Social Media Platform\n\t\t2002 : LinkedIn\n\t\t2004 : Facebook\n\t\t\t : Google\n\t\t2005 : Youtube\n\t\t2006 : Twitter",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "991438b8-6a62-44b7-af3c-b671a80ccb50",
      "category": "Timeline",
      "description": "timeline with grouping",
      "content": "timeline\n\t\ttitle Timeline of Industrial Revolution\n\t\tsection 17th-20th century\n\t\t\tIndustry 1.0 : Machinery, Water power, Steam <br>power\n\t\t\tIndustry 2.0 : Electricity, Internal combustion engine, Mass production\n\t\t\tIndustry 3.0 : Electronics, Computers, Automation\n\t\tsection 21st century\n\t\t\tIndustry 4.0 : Internet, Robotics, Internet of Things\n\t\t\tIndustry 5.0 : Artificial intelligence, Big data,3D printing",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "f49c8cd7-bc7b-4ef2-ab2b-2a010a7c823c",
      "category": "Timeline",
      "description": "timeline with Forest theme. see the docs for additional themes",
      "content": "%%{init: { 'logLevel': 'debug', 'theme': 'forest' } }%%\n\t\ttimeline\n\t\t\ttitle History of Social Media Platform\n\t\t\t  2002 : LinkedIn\n\t\t\t  2004 : Facebook : Google\n\t\t\t  2005 : Youtube\n\t\t\t  2006 : Twitter\n\t\t\t  2007 : Tumblr\n\t\t\t  2008 : Instagram\n\t\t\t  2010 : Pinterest",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "d7282e94-d49c-4545-a1f7-4fce30071060",
      "category": "QuadrantChart",
      "description": "sample quadrant chart",
      "content": "quadrantChart\n\t\ttitle Reach and engagement of campaigns\n\t\tx-axis Low Reach --> High Reach\n\t\ty-axis Low Engagement --> High Engagement\n\t\tquadrant-1 We should expand\n\t\tquadrant-2 Need to promote\n\t\tquadrant-3 Re-evaluate\n\t\tquadrant-4 May be improved\n\t\tCampaign A: [0.3, 0.6]\n\t\tCampaign B: [0.45, 0.23]\n\t\tCampaign C: [0.57, 0.69]\n\t\tCampaign D: [0.78, 0.34]\n\t\tCampaign E: [0.40, 0.34]\n\t\tCampaign F: [0.35, 0.78]",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "89373abe-2efd-4442-bd2b-3c9afe421a8d",
      "category": "QuadrantChart",
      "description": "themed quadrant chart",
      "content": "%%{init: {\"quadrantChart\": {\"chartWidth\": 400, \"chartHeight\": 400}, \"themeVariables\": {\"quadrant1TextFill\": \"#ff0000\"} }}%%\n\t\tquadrantChart\n\t\t  x-axis Urgent --> Not Urgent\n\t\t  y-axis Not Important --> \"Important ❤\"\n\t\t  quadrant-1 Plan\n\t\t  quadrant-2 Do\n\t\t  quadrant-3 Delegate\n\t\t  quadrant-4 Delete",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "ef863dcd-bbcd-4475-b710-98ff65b12991",
      "category": "C4Diagram",
      "description": "sample C4 diagram (compatible with PlantUML)",
      "content": "C4Context\n\t\ttitle System Context diagram for Internet Banking System\n\t\tEnterprise_Boundary(b0, \"BankBoundary0\") {\n\t\t  Person(customerA, \"Banking Customer A\", \"A customer of the bank, with personal bank accounts.\")\n\t\t  Person(customerB, \"Banking Customer B\")\n\t\t  Person_Ext(customerC, \"Banking Customer C\", \"desc\")\n  \n\t\t  Person(customerD, \"Banking Customer D\", \"A customer of the bank, <br/> with personal bank accounts.\")\n  \n\t\t  System(SystemAA, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\")\n  \n\t\t  Enterprise_Boundary(b1, \"BankBoundary\") {\n  \n\t\t\tSystemDb_Ext(SystemE, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\")\n  \n\t\t\tSystem_Boundary(b2, \"BankBoundary2\") {\n\t\t\t  System(SystemA, \"Banking System A\")\n\t\t\t  System(SystemB, \"Banking System B\", \"A system of the bank, with personal bank accounts. next line.\")\n\t\t\t}\n  \n\t\t\tSystem_Ext(SystemC, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\")\n\t\t\tSystemDb(SystemD, \"Banking System D Database\", \"A system of the bank, with personal bank accounts.\")\n  \n\t\t\tBoundary(b3, \"BankBoundary3\", \"boundary\") {\n\t\t\t  SystemQueue(SystemF, \"Banking System F Queue\", \"A system of the bank.\")\n\t\t\t  SystemQueue_Ext(SystemG, \"Banking System G Queue\", \"A system of the bank, with personal bank accounts.\")\n\t\t\t}\n\t\t  }\n\t\t}\n  \n\t\tBiRel(customerA, SystemAA, \"Uses\")\n\t\tBiRel(SystemAA, SystemE, \"Uses\")\n\t\tRel(SystemAA, SystemC, \"Sends e-mails\", \"SMTP\")\n\t\tRel(SystemC, customerA, \"Sends e-mails to\")\n  \n\t\tUpdateElementStyle(customerA, $fontColor=\"red\", $bgColor=\"grey\", $borderColor=\"red\")\n\t\tUpdateRelStyle(customerA, SystemAA, $textColor=\"blue\", $lineColor=\"blue\", $offsetX=\"5\")\n\t\tUpdateRelStyle(SystemAA, SystemE, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-10\")\n\t\tUpdateRelStyle(SystemAA, SystemC, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-40\", $offsetX=\"-50\")\n\t\tUpdateRelStyle(SystemC, customerA, $textColor=\"red\", $lineColor=\"red\", $offsetX=\"-50\", $offsetY=\"20\")\n  \n\t\tUpdateLayoutConfig($c4ShapeInRow=\"3\", $c4BoundaryInRow=\"1\")",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "d8c14d1d-73d4-44b5-a4d3-fd4f8f21132f",
      "category": "ClassDiagram",
      "description": "sample class",
      "content": "class Duck{\n            +String beakColor\n            +swim()\n            +quack()\n        }",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "2f6ffe04-10b7-4948-bca4-cc62b28844a1",
      "description": "example_by_hyeseong",
      "content": "```mermaid\n---\ntitle: Bank example\n---\nclassDiagram\n    class BankAccount\n    BankAccount : +String owner\n    BankAccount : +Bigdecimal balance\n    BankAccount : +deposit(amount)\n    BankAccount : +withdrawal(amount)\n```",
      "category": "ClassDiagram",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "06cb8e3a-3542-440e-8abc-e8407a7fa168",
      "category": "ClassDiagram",
      "description": "sample class",
      "content": "class BankAccount\n        BankAccount : +String owner\n        BankAccount : +Bigdecimal balance\n        BankAccount : +deposit(amount)\n        BankAccount : +withdrawal(amount)",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "bc85369c-4c1b-449f-8e39-612d415ede14",
      "category": "ClassDiagram",
      "description": "generic class",
      "content": "class Square~Shape~{\n            int id\n            List~int~ position\n            setPoints(List~int~ points)\n            getPoints() List~int~\n        }\n        \n        Square : -List~string~ messages\n        Square : +setMessages(List~string~ messages)\n        Square : +getMessages() List~string~",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "d9b79b4f-1a8d-450f-b94b-cccd3e248295",
      "category": "ClassDiagram",
      "description": "inheritance",
      "content": "classA <|-- classB",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "f87e847e-2af6-43c4-ab62-56f1d20f52ea",
      "category": "ClassDiagram",
      "description": "composition",
      "content": "classC *-- classD",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "3e762619-35f9-4253-ba71-414ee47bbe44",
      "category": "ClassDiagram",
      "description": "aggregation",
      "content": "classE o-- classF",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "178d2815-e3bf-4f75-90b4-8a8638bf3137",
      "category": "ClassDiagram",
      "description": "association",
      "content": "classG <-- classH",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "ddfa9aba-9ada-4a9f-9fa1-ee0675b5beb0",
      "category": "ClassDiagram",
      "description": "solid link",
      "content": "classI -- classJ",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "26f6ead6-e0cb-44c2-97e8-fa38463aa9d6",
      "category": "ClassDiagram",
      "description": "dependency",
      "content": "classK <.. classL",
      "sortingOrder": 9,
      "isPinned": false
    },
    {
      "id": "3d740b36-113c-4649-a420-b0f1a925642e",
      "category": "ClassDiagram",
      "description": "realization",
      "content": "classM <|.. classN",
      "sortingOrder": 10,
      "isPinned": false
    },
    {
      "id": "9092f404-de37-4e22-9ac8-ee260f93f53f",
      "category": "ClassDiagram",
      "description": "dashed link",
      "content": "classO .. classP",
      "sortingOrder": 11,
      "isPinned": false
    },
    {
      "id": "48b29911-09d7-49cc-95e0-7f7959db3c92",
      "category": "ClassDiagram",
      "description": "two-way relation",
      "content": "Animal <|--|> Zebra",
      "sortingOrder": 12,
      "isPinned": false
    },
    {
      "id": "a458d135-1a53-4ee4-ba44-7039679615a0",
      "category": "ClassDiagram",
      "description": "sample class diagram",
      "content": "classDiagram\n        Animal <|-- Duck\n        Animal <|-- Fish\n        Animal <|-- Zebra\n        Animal : +int age\n        Animal : +String gender\n        Animal: +isMammal()\n        Animal: +mate()\n        class Duck{\n            +String beakColor\n            +swim()\n            +quack()\n        }\n        class Fish{\n            -int sizeInFeet\n            -canEat()\n        }\n        class Zebra{\n            +bool is_wild\n            +run()\n        }",
      "sortingOrder": 83,
      "isPinned": false
    }
  ],
  "selectedCategory": "ClassDiagram"
}